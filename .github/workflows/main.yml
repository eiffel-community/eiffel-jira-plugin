# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "caching"
  caching:    
    # if: github.repository == 'eiffel-community/eiffel-jira-plugin'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: gradle:jdk8
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10
                   
      - name: Before caching
        run: |
           rm -f  ~/.gradle/caches/modules-2/modules-2.lock
           rm -fr ~/.gradle/caches/*/plugin-resolution/
           
      - name: Cache Gradle Directories
        uses: actions/cache@v3
        with:
         path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
         key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
         
      - name: Verify
        shell: bash
        run: |
          ls .gradle/caches/
          ls .gradle/wrapper/
